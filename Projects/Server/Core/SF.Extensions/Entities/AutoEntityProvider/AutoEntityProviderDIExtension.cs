#region Apache License Version 2.0
/*----------------------------------------------------------------
Copyright 2017 Yang Chen (cy2000@gmail.com)

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
except in compliance with the License. You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software distributed under the
License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
either express or implied. See the License for the specific language governing permissions
and limitations under the License.
Detail: https://github.com/etechi/ServiceFramework/blob/master/license.md
----------------------------------------------------------------*/
#endregion Apache License Version 2.0

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using SF.Data;
using System.Linq.Expressions;
using System.Reflection;
using System.Text;
using SF.Core.ServiceManagement;

namespace SF.Entities.AutoEntityProvider
{
	public static class AutoEntityProviderDIExtension
	{
		class EntityAutoCapability : IEntityAutoCapability
		{
			public string EntityIdent { get; set; }

			public AutoCapability Capability { get; set; }
		}
		public static IServiceCollection GenerateEntityManager(this IServiceCollection  sc, string Ident)
		{
			sc.AddSingleton<IEntityAutoCapability>(
				new EntityAutoCapability
				{
					EntityIdent = Ident,
					Capability = AutoCapability.GenerateManager
				});
			return sc;
		}
		public static IServiceCollection GenerateEntityDataModel(this IServiceCollection sc, string Ident)
		{
			sc.AddSingleton<IEntityAutoCapability>(
				new EntityAutoCapability
				{
					EntityIdent = Ident,
					Capability = AutoCapability.GenerateDataModel
				});
			return sc;
		}
		//public static IServiceCollection AddAutoEntityType(
		//	this IServiceCollection sc,
		//	string Namespace,
		//	params Type[] Types
		//	)
		//	=> sc.AddAutoEntityType(Namespace, true, Types);

		//public static IServiceCollection AddAutoEntityType(
		//	this IServiceCollection sc, 
		//	string Namespace, 
		//	bool AutoGenerateDataModel,
		//	params Type[] Types
		//	)
		//{
		//	Types.ForEach(t =>
		//		sc.AddSingleton(sp => new AutoEntityType (Namespace,t, AutoGenerateDataModel))
		//		);
		//	return sc;
		//}
	}


}