using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using SF.Data;
using System.Linq.Expressions;
using System.Reflection;
using System.Text;
using SF.Core.ServiceManagement;

namespace SF.Entities.AutoEntityProvider
{
	public static class AutoEntityProviderDIExtension
	{
		class EntityAutoCapability : IEntityAutoCapability
		{
			public string EntityIdent { get; set; }

			public AutoCapability Capability { get; set; }
		}
		public static IServiceCollection GenerateEntityManager(this IServiceCollection  sc, string Ident)
		{
			sc.AddSingleton<IEntityAutoCapability>(
				new EntityAutoCapability
				{
					EntityIdent = Ident,
					Capability = AutoCapability.GenerateManager
				});
			return sc;
		}
		public static IServiceCollection GenerateEntityDataModel(this IServiceCollection sc, string Ident)
		{
			sc.AddSingleton<IEntityAutoCapability>(
				new EntityAutoCapability
				{
					EntityIdent = Ident,
					Capability = AutoCapability.GenerateDataModel
				});
			return sc;
		}
		//public static IServiceCollection AddAutoEntityType(
		//	this IServiceCollection sc,
		//	string Namespace,
		//	params Type[] Types
		//	)
		//	=> sc.AddAutoEntityType(Namespace, true, Types);

		//public static IServiceCollection AddAutoEntityType(
		//	this IServiceCollection sc, 
		//	string Namespace, 
		//	bool AutoGenerateDataModel,
		//	params Type[] Types
		//	)
		//{
		//	Types.ForEach(t =>
		//		sc.AddSingleton(sp => new AutoEntityType (Namespace,t, AutoGenerateDataModel))
		//		);
		//	return sc;
		//}
	}


}