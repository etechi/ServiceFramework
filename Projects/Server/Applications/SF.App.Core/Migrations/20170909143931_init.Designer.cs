// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SF.Applications;
using SF.Entities;
using System;

namespace SF.App.Core.Migrations
{
    [DbContext(typeof(SFDbContext))]
    [Migration("20170909143931_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SF.Core.CallPlans.Storage.DataModels.CallExpired", b =>
                {
                    b.Property<string>("Callable")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200);

                    b.Property<string>("CallArgument")
                        .HasMaxLength(200);

                    b.Property<string>("CallError")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("ExecCount");

                    b.Property<string>("ExecError")
                        .HasMaxLength(200);

                    b.Property<DateTime>("Expired");

                    b.Property<DateTime?>("LastExecTime");

                    b.Property<string>("Title")
                        .HasMaxLength(100);

                    b.HasKey("Callable");

                    b.ToTable("SysCallExpired");
                });

            modelBuilder.Entity("SF.Core.CallPlans.Storage.DataModels.CallInstance", b =>
                {
                    b.Property<string>("Callable")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200);

                    b.Property<string>("CallArgument")
                        .HasMaxLength(200);

                    b.Property<string>("CallError")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CallTime");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("DelaySecondsOnError");

                    b.Property<int>("ErrorCount");

                    b.Property<string>("ExecError")
                        .HasMaxLength(200);

                    b.Property<DateTime>("Expire");

                    b.Property<DateTime?>("LastExecTime");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Callable");

                    b.HasIndex("CallTime");

                    b.ToTable("SysCallInstance");
                });

            modelBuilder.Entity("SF.Core.ServiceManagement.Management.DataModels.ServiceInstance", b =>
                {
                    b.Property<long>("Id");

                    b.Property<long?>("ContainerId");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Icon")
                        .HasMaxLength(100);

                    b.Property<string>("Image")
                        .HasMaxLength(100);

                    b.Property<string>("ImplementType")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int>("ItemOrder");

                    b.Property<byte>("LogicState");

                    b.Property<string>("Memo")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long>("OwnerId");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100);

                    b.Property<long?>("ScopeId");

                    b.Property<string>("ServiceIdent")
                        .HasMaxLength(200);

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Setting");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(100);

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdatedTime");

                    b.Property<long>("UpdatorId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("ImplementType");

                    b.HasIndex("Name");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ScopeId");

                    b.HasIndex("ServiceIdent");

                    b.HasIndex("UpdatorId");

                    b.HasIndex("ContainerId", "ItemOrder");

                    b.HasIndex("ContainerId", "ServiceType");

                    b.ToTable("SysServiceInstance");
                });

            modelBuilder.Entity("SF.Data.IdentGenerator.DataModels.IdentSeed", b =>
                {
                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100);

                    b.Property<long>("NextValue");

                    b.Property<int>("Section");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Type");

                    b.ToTable("SysIdentSeed");
                });

            modelBuilder.Entity("SF.Core.ServiceManagement.Management.DataModels.ServiceInstance", b =>
                {
                    b.HasOne("SF.Core.ServiceManagement.Management.DataModels.ServiceInstance", "Container")
                        .WithMany("Children")
                        .HasForeignKey("ContainerId");
                });
#pragma warning restore 612, 618
        }
    }
}
